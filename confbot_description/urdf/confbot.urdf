<?xml version="1.0" ?>
<robot name="confbot" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>

  <link name="base_link">
    <inertial>
      <mass value="5"/>
      <!--inertia ixx="0.4" ixy="0" ixz="0" iyy="0.4" iyz="0" izz="0.8"/-->
      <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="1 1 0.1"/>
        <!--mesh filename="package://confbot_description/meshes/confbot.dae"/-->
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://confbot_description/meshes/confbot.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="laser_frame" type="fixed">
    <origin rpy="0 0 0" xyz="0.45 0.0 0.1"/>
    <parent link="base_link"/>
    <child link="laser_frame"/>
  </joint>
  <link name="laser_frame">
    <inertial>
      <mass value="1"/>
      <inertia ixx="1.0e-03" ixy="0" ixz="0" iyy="1.0e-3" iyz="0" izz="1.0e-3"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
      <material name="black"/>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
      <material name="black"/>
    </visual>
  </link>
  <joint name="camera_frame" type="fixed">
    <origin rpy="0 0 0" xyz="0.4 0.0 0.2"/>
    <parent link="base_link"/>
    <child link="camera_frame"/>
  </joint>
  <link name="camera_frame">
    <inertial>
      <mass value="1"/>
      <inertia ixx="1.0e-03" ixy="0" ixz="0" iyy="1.0e-3" iyz="0" izz="1.0e-3"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
      <material name="black"/>
    </collision>
  </link>
  <joint name="camera_optical_fixed_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
    <parent link="camera_frame"/>
    <child link="camera_optical_frame"/>
  </joint>
  <link name="camera_optical_frame"/>
  <joint name="wheel_l_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0 0.55 0.0"/>
    <axis xyz="0 1.0 0"/>
    <parent link="base_link"/>
    <child link="wheel_l_link"/>
  </joint>
  <link name="wheel_l_link">
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
      <!--inertia ixx="1.0" ixy="0" ixz="0" iyy="1.0" iyz="0" izz="1.0"/-->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
    <collision>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
      <material name="white"/>
    </collision>
    <visual>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
      <material name="white"/>
    </visual>
  </link>
  <joint name="wheel_r_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0 -0.55 0.0"/>
    <axis xyz="0 1.0 0"/>
    <parent link="base_link"/>
    <child link="wheel_r_link"/>
  </joint>
  <link name="wheel_r_link">
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
    <collision>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
      <material name="white"/>
    </collision>
    <visual>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
      <material name="white"/>
    </visual>
  </link>
  <joint name="caster_wheel_front_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.4 0.0 -0.05"/>
    <axis xyz="1.0 1.0 0"/>
    <parent link="base_link"/>
    <child link="caster_wheel_front_link"/>
  </joint>
  <link name="caster_wheel_front_link">
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
    <collision>
      <!--origin rpy="1.57 0 0" xyz="0 0 0"/-->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <material name="white"/>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <material name="white"/>
    </visual>
  </link>
  <joint name="caster_wheel_rear_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.4 0.0 -0.05"/>
    <axis xyz="1.0 1.0 0"/>
    <parent link="base_link"/>
    <child link="caster_wheel_rear_link"/>
  </joint>
  <link name="caster_wheel_rear_link">
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
    <collision>
      <!--origin rpy="1.57 0 0" xyz="0 0 0"/-->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <material name="white"/>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <material name="white"/>
    </visual>
  </link>
  <gazebo>
    <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>

      <ros>
        <namespace>/</namespace>
        <argument>cmd_vel:=cmd_vel</argument>
        <argument>odom:=odom</argument>
      </ros>

      <!-- wheels -->
      <left_joint>wheel_l_joint</left_joint>
      <right_joint>wheel_r_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>1.2</wheel_separation>
      <wheel_diameter>0.6</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>

      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>

    </plugin>
  </gazebo>

<gazebo reference="laser_frame">
    <!--sensor type="gpu_ray" name="lidar"-->
    <sensor type="ray" name="lidar">
      <visualize>true</visualize>
      <update_rate>3</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1875</samples>
            <resolution>1</resolution>
            <min_angle>-2.0943951023931953</min_angle>
            <max_angle>2.0943951023931953</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>30.0</max>
          <resolution>0.001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.008</stddev>
        </noise>
      </ray>
      <!--plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_gpu_laser.so"-->
      <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_ray_sensor.so">
        <output_type>sensor_msgs/LaserScan</output_type>
        <ros>
          <!--frameName>/laser_frame</frameName-->
          <namespace>/</namespace>
          <argument>~/out:=scan</argument>
        </ros>
      </plugin>
    </sensor>
  </gazebo>

<gazebo reference="camera_frame">
        <sensor type="camera" name="confbot_camera">
          <update_rate>30</update_rate>
          <visualize>true</visualize>
          <camera name="head">
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.02</near>
              <far>300</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <!-- Noise is sampled independently per pixel on each frame.
                   That pixel's noise value is added to each of its color
                   channels, which at that point lie in the range [0,1]. -->
              <mean>0.0</mean>
              <stddev>0.007</stddev>
            </noise>
          </camera>
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <frame_name>camera_optical_frame</frame_name>
            <!-- camera_name>omit so it defaults to sensor name</camera_name-->
            <!-- frame_name>omit so it defaults to link name</frameName-->
          </plugin>
        </sensor>
</gazebo>


</robot>
